type Option :: *
type Option = hspec-core:GetOpt.Declarative.Types.Option Config
addTransformation :: (Config -> [SpecTree ()] -> [SpecTree ()]) -> SpecWith a
argument :: String -> (String -> Maybe a) -> (a -> Config -> Config) -> Test.Hspec.Api.Extension.V1.OptionSetter
flag :: String -> (Bool -> Config -> Config) -> String -> Option
option :: String -> Test.Hspec.Api.Extension.V1.OptionSetter -> String -> Option
registerOption :: String -> Option -> SpecWith a
type Config :: *
data Config = hspec-core:Test.Hspec.Core.Config.Definition.Config
  hspec-core:Test.Hspec.Core.Config.Definition.configIgnoreConfigFile :: Bool
  hspec-core:Test.Hspec.Core.Config.Definition.configDryRun :: Bool
  hspec-core:Test.Hspec.Core.Config.Definition.configFocusedOnly :: Bool
  hspec-core:Test.Hspec.Core.Config.Definition.configFailOnEmpty :: Bool
  hspec-core:Test.Hspec.Core.Config.Definition.configFailOnFocused :: Bool
  hspec-core:Test.Hspec.Core.Config.Definition.configFailOnPending :: Bool
  hspec-core:Test.Hspec.Core.Config.Definition.configFailOnEmptyDescription :: Bool
  hspec-core:Test.Hspec.Core.Config.Definition.configPrintSlowItems :: Maybe Int
  hspec-core:Test.Hspec.Core.Config.Definition.configPrintCpuTime :: Bool
  hspec-core:Test.Hspec.Core.Config.Definition.configFailFast :: Bool
  hspec-core:Test.Hspec.Core.Config.Definition.configRandomize :: Bool
  hspec-core:Test.Hspec.Core.Config.Definition.configFailureReport :: Maybe FilePath
  hspec-core:Test.Hspec.Core.Config.Definition.configRerun :: Bool
  hspec-core:Test.Hspec.Core.Config.Definition.configRerunAllOnSuccess :: Bool
  hspec-core:Test.Hspec.Core.Config.Definition.configFilterPredicate :: Maybe (Test.Hspec.Core.Util.Path -> Bool)
  hspec-core:Test.Hspec.Core.Config.Definition.configSkipPredicate :: Maybe (Test.Hspec.Core.Util.Path -> Bool)
  hspec-core:Test.Hspec.Core.Config.Definition.configQuickCheckSeed :: Maybe Integer
  hspec-core:Test.Hspec.Core.Config.Definition.configQuickCheckMaxSuccess :: Maybe Int
  hspec-core:Test.Hspec.Core.Config.Definition.configQuickCheckMaxDiscardRatio :: Maybe Int
  hspec-core:Test.Hspec.Core.Config.Definition.configQuickCheckMaxSize :: Maybe Int
  hspec-core:Test.Hspec.Core.Config.Definition.configQuickCheckMaxShrinks :: Maybe Int
  hspec-core:Test.Hspec.Core.Config.Definition.configSmallCheckDepth :: Maybe Int
  hspec-core:Test.Hspec.Core.Config.Definition.configColorMode :: hspec-core:Test.Hspec.Core.Config.Definition.ColorMode
  hspec-core:Test.Hspec.Core.Config.Definition.configUnicodeMode :: hspec-core:Test.Hspec.Core.Config.Definition.UnicodeMode
  hspec-core:Test.Hspec.Core.Config.Definition.configDiff :: Bool
  hspec-core:Test.Hspec.Core.Config.Definition.configDiffContext :: Maybe Int
  hspec-core:Test.Hspec.Core.Config.Definition.configExternalDiff :: Maybe (Maybe Int -> String -> String -> IO ())
  hspec-core:Test.Hspec.Core.Config.Definition.configPrettyPrint :: Bool
  hspec-core:Test.Hspec.Core.Config.Definition.configPrettyPrintFunction :: Bool -> String -> String -> (String, String)
  hspec-core:Test.Hspec.Core.Config.Definition.configFormatException :: GHC.Exception.Type.SomeException -> String
  hspec-core:Test.Hspec.Core.Config.Definition.configTimes :: Bool
  hspec-core:Test.Hspec.Core.Config.Definition.configExpertMode :: Bool
  hspec-core:Test.Hspec.Core.Config.Definition.configAvailableFormatters :: [(String, Test.Hspec.Core.Format.FormatConfig -> IO Test.Hspec.Core.Format.Format)]
  hspec-core:Test.Hspec.Core.Config.Definition.configFormat :: Maybe (Test.Hspec.Core.Format.FormatConfig -> IO Test.Hspec.Core.Format.Format)
  hspec-core:Test.Hspec.Core.Config.Definition.configFormatter :: Maybe hspec-core:Test.Hspec.Core.Formatters.V1.Monad.Formatter
  hspec-core:Test.Hspec.Core.Config.Definition.configHtmlOutput :: Bool
  hspec-core:Test.Hspec.Core.Config.Definition.configConcurrentJobs :: Maybe Int
  hspec-core:Test.Hspec.Core.Config.Definition.configExtensionOptions :: [(String, [hspec-core:GetOpt.Declarative.Types.Option Config])]
  hspec-core:Test.Hspec.Core.Config.Definition.configAnnotations :: hspec-core:Test.Hspec.Core.Annotations.Annotations
  hspec-core:Test.Hspec.Core.Config.Definition.configTransformSpec :: Config -> [SpecTree ()] -> [SpecTree ()]
type Item :: * -> *
data Item a = hspec-core:Test.Hspec.Core.Tree.Item
  hspec-core:Test.Hspec.Core.Tree.itemRequirement :: String
  hspec-core:Test.Hspec.Core.Tree.itemLocation :: Maybe hspec-core:Test.Hspec.Core.Example.Location.Location
  hspec-core:Test.Hspec.Core.Tree.itemIsParallelizable :: Maybe Bool
  hspec-core:Test.Hspec.Core.Tree.itemIsFocused :: Bool
  hspec-core:Test.Hspec.Core.Tree.itemAnnotations :: hspec-core:Test.Hspec.Core.Annotations.Annotations
  hspec-core:Test.Hspec.Core.Tree.itemExample :: hspec-core:Test.Hspec.Core.Example.Params -> (hspec-core:Test.Hspec.Core.Example.ActionWith a -> IO ()) -> hspec-core:Test.Hspec.Core.Example.ProgressCallback -> IO hspec-core:Test.Hspec.Core.Example.Result
type SpecTree :: * -> *
type SpecTree a = hspec-core:Test.Hspec.Core.Tree.Tree (IO ()) (Item a)
type SpecWith :: * -> *
type SpecWith a = hspec-core:Test.Hspec.Core.Spec.Monad.SpecM a ()
getConfigAnnotation :: base:Data.Typeable.Internal.Typeable value => Config -> Maybe value
modifyConfig :: (Config -> Config) -> SpecWith a
runIO :: IO r -> hspec-core:Test.Hspec.Core.Spec.Monad.SpecM a r
setConfigAnnotation :: base:Data.Typeable.Internal.Typeable value => value -> Config -> Config
